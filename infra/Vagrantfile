VAGRANTFILE_API_VERSION = "2"

# Box 정보 및 네트워크 설정
BOX_NAME = "bento/ubuntu-22.04"
BOX_VERSION = "202502.21.0"
BASIC_IP = "192.168.56."
MASTER_IP = "100"
WORKER_IP_BASE = 200
EXTRA_DISK_MB = 51200  # 50GB

# vagrant up 여부 확인
UP_COMMAND = ARGV.include?("up")

Vagrant.configure(VAGRANTFILE_API_VERSION) do |config|
  config.vm.box = BOX_NAME
  config.vm.box_version = BOX_VERSION
  config.vm.boot_timeout = 600

  # h-flow-master 노드
  config.vm.define "h-flow-master" do |node|
    node.vm.hostname = "h-flow-master"
    node.vm.network "private_network", ip: "#{BASIC_IP}#{MASTER_IP}"

    node.vm.provider "virtualbox" do |vb|
      vb.name = "h-flow-master"
      vb.memory = 8192
      vb.cpus = 4

      if UP_COMMAND
        disk_path = File.expand_path("h-flow-master_disk.vdi", __dir__)
        unless File.exist?(disk_path)
          puts ">> 디스크 생성 중: #{disk_path}"
          system("VBoxManage createmedium disk --filename #{disk_path} --size #{EXTRA_DISK_MB} --format VDI")
        end

        vb.customize [
          "storageattach", "h-flow-master",
          "--storagectl", "SATA Controller",
          "--port", "1",
          "--device", "0",
          "--type", "hdd",
          "--medium", disk_path
        ]
      end
    end

    node.vm.synced_folder ".", "/vagrant", mount_options: ["dmode=775", "fmode=664"]
  end

  # h-flow-worker 노드들
  (1..2).each do |i|
    name = "h-flow-worker#{i}"
    ip = "#{BASIC_IP}#{WORKER_IP_BASE + i - 1}"

    config.vm.define name do |node|
      node.vm.hostname = name
      node.vm.network "private_network", ip: ip

      node.vm.provider "virtualbox" do |vb|
        vb.name = name
        vb.memory = 4096
        vb.cpus = 2

        if UP_COMMAND
          disk_path = File.expand_path("#{name}_disk.vdi", __dir__)
          unless File.exist?(disk_path)
            puts ">> 디스크 생성 중: #{disk_path}"
            system("VBoxManage createmedium disk --filename #{disk_path} --size #{EXTRA_DISK_MB} --format VDI")
          end

          vb.customize [
            "storageattach", name,
            "--storagectl", "SATA Controller",
            "--port", "1",
            "--device", "0",
            "--type", "hdd",
            "--medium", disk_path
          ]
        end
      end

      node.vm.synced_folder ".", "/vagrant", mount_options: ["dmode=775", "fmode=664"]
    end
  end

  # h-flow-ansible (제어 노드)
  config.vm.define "h-flow-ansible" do |node|
    node.vm.hostname = "h-flow-ansible"
    node.vm.network "private_network", ip: "#{BASIC_IP}10"

    node.vm.provider "virtualbox" do |vb|
      vb.name = "h-flow-ansible"
      vb.memory = 2048
      vb.cpus = 2
    end

    node.vm.synced_folder ".", "/vagrant", mount_options: ["dmode=775", "fmode=664"]

    # 최초 1회만 Ansible 설치 및 실행
    node.vm.provision "shell", inline: <<-SHELL
      if [ -f /etc/h-flow-ansible-bootstrapped ]; then
        echo "[!] Ansible 이미 설치됨. 초기화 작업 생략"
        exit 0
      fi

      echo "[+] Installing Ansible on h-flow-ansible..."
      sudo apt update
      sudo apt install -y ansible sshpass iputils-ping

      echo "[+] Copying and fixing SSH private keys..."
      cp /vagrant/.vagrant/machines/h-flow-master/virtualbox/private_key /home/vagrant/master_private_key
      cp /vagrant/.vagrant/machines/h-flow-worker1/virtualbox/private_key /home/vagrant/worker1_private_key
      cp /vagrant/.vagrant/machines/h-flow-worker2/virtualbox/private_key /home/vagrant/worker2_private_key
      chmod 600 /home/vagrant/*_private_key
      chown vagrant:vagrant /home/vagrant/*_private_key

      echo "[+] Waiting for all target nodes to be reachable via SSH..."
      for ip in 192.168.56.100 192.168.56.200 192.168.56.201; do
        echo "  → ping 테스트 중: $ip"
        until ping -c2 -W2 $ip >/dev/null 2>&1; do
          echo "    [✗] $ip 응답 없음. 2초 후에 재시도합니다..."
          sleep 2
        done
        echo "    [✓] $ip 응답 확인됨!"
      done

      echo "[+] Ansible ping 테스트..."
      cd /vagrant/ansible
      ansible -i inventory.ini all -m ping

      echo "[+] Ansible playbook 실행..."
      ansible-playbook -i inventory.ini playbook.yml

      sudo touch /etc/h-flow-ansible-bootstrapped
    SHELL
  end
end
